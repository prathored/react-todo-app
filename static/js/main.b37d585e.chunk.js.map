{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","key","Header","prevProps","prevState","bgColor","Math","floor","random","headerSpan","document","getElementById","innerHTML","backgroundColor","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","delTodo","axios","delete","then","response","filter","addTodoItem","post","data","get","ReactDom","render"],"mappings":"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","file":"static/js/main.b37d585e.chunk.js","sourcesContent":["import React from \"react\"\n\nclass TodoItem extends React.Component {\n    componentWillUnmount() {\n        alert(\"Item to be deleted\");\n    }\n\n    render() {\n        const {completed, id, title} = this.props.todo;\n\n        const completedStyle = {\n            fontStyle: \"italic\",\n            color: \"#d35e0f\",\n            opacity: 0.4,\n            textDecoration: \"line-through\"\n        };\n\n        return (\n            <li className=\"todo-item\">\n                <input\n                    type=\"checkbox\"\n                    checked={completed}\n                    onChange={() => this.props.handleChangeProps(id)}\n                />\n                <button onClick={() => this.props.deleteTodoProps(id)}>\n                    Delete\n                </button>\n                <span style={completed ? completedStyle : null}>\n                    {title}\n                </span>\n            </li>\n        );\n    }\n}\n\nexport default TodoItem;","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass TodosList extends React.Component {\n    render() {\n        return (\n            <div>\n                {this.props.todos.map(todo => (\n                    <TodoItem\n                        key={todo.id}\n                        todo={todo}\n                        handleChangeProps={this.props.handleChangeProps}\n                        deleteTodoProps={this.props.deleteTodoProps}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default TodosList;","import React, {Component} from \"react\";\n\nclass Header extends Component {\n    componentDidUpdate(prevProps, prevState) {\n        var x = Math.floor(Math.random() * 256);\n        var y = Math.floor(Math.random() * 256);\n        var z = Math.floor(Math.random() * 256);\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\n        if (prevProps.headerSpan !== this.props.headerSpan) {\n            document.getElementById(\"inH1\").innerHTML = \"clicked\";\n            document.getElementById(\"inH1\").style.backgroundColor = bgColor;\n        }\n    }\n\n    render() {\n        const headerStyle = {\n            padding: \"20px 0\",\n            lineHeight: \"2em\"\n        };\n\n        return (\n            <header style={headerStyle}>\n                <h1 style={{fontSize: \"25px\", marginBottom: \"15px\"}}>\n                    Simple Todo App <span id=\"inH1\"></span>\n                </h1>\n                <p style={{fontSize: \"19px\"}}>\n                    Please add to-dos item(s) through the input field\n                </p>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from \"react\";\n\nclass InputTodo extends Component {\n    state = {\n        title: \"\"\n    };\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodoProps(this.state.title);\n        this.setState({\n            title: \"\"\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n                <input\n                    type=\"text\"\n                    className=\"input-text\"\n                    placeholder=\"Add Todo...\"\n                    name=\"title\"\n                    value={this.state.title}\n                    onChange={this.onChange}\n                />\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\n\nexport default InputTodo;","import React from \"react\";\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport axios from \"axios\";\n\nclass TodoContainer extends React.Component {\n    state = {\n        todos: [],\n        show: false\n    };\n\n    handleChange = (id) => {\n        this.setState({\n            todos: this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            }),\n            show: !this.state.show\n        });\n    };\n\n    delTodo = id => {\n        axios\n            .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n            .then(response =>\n                this.setState({\n                    todos: [\n                        ...this.state.todos.filter(todo => {\n                            return todo.id !== id\n                        }),\n                    ],\n                })\n            );\n    }\n\n    addTodoItem = title => {\n        axios\n            .post(\"https://jsonplaceholder.typicode.com/todos\", {\n                title: title,\n                completed: false\n            })\n            .then(response =>\n                this.setState({\n                    todos: [...this.state.todos, response.data]\n                })\n            );\n    }\n\n    componentDidMount() {\n        axios\n            .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n            .then(response =>\n                this.setState({ todos: response.data })\n            );\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Header headerSpan={this.state.show} />\n                <InputTodo addTodoProps={this.addTodoItem} />\n                <TodosList\n                    todos={this.state.todos}\n                    handleChangeProps={this.handleChange}\n                    deleteTodoProps={this.delTodo}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TodoContainer;","import React from \"react\";\nimport ReactDom from \"react-dom\";\n// component file\nimport TodoContainer from \"./components/TodoContainer\";\nimport \"./App.css\";\n\nReactDom.render(<TodoContainer />, document.getElementById(\"root\"));"],"sourceRoot":""}